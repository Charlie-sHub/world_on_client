name: worldon
description: Front end or client side of the World On project.

# The following line prevents the package from being accidentally published to
# pub.dev using `pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.0+1

environment:
  sdk: ">=2.7.0 <3.0.0"

dependencies:
  flutter:
    sdk: flutter
  # Service locator
  get_it: ^4.0.4
  # For dependency injection
  injectable: ^1.0.4
  # Bloc for state management
  flutter_bloc: ^6.0.1
  # Value equality
  # Probably useless now
  equatable: ^1.2.3
  # Functional programming thingies
  dartz: ^0.9.1
  # Remote API
  # Probably useless now
  data_connection_checker: ^0.3.4
  # For connecting to http services
  # Probably useless now
  http: ^0.12.2
  # For local cache, probably useless as we'll use Firestore
  # Probably useless now
  shared_preferences: ^0.5.8
  # For unions generation
  freezed_annotation: ^0.11.0+1
  # For email validation
  email_validator: ^1.0.5
  # For mapping
  google_maps_flutter: ^0.5.29
  # For getting the geolocation of the user
  geolocator: ^5.3.2+2
  # For Kotlin like collections
  kt_dart: ^0.7.0+1
  # For easier bloc testing
  bloc_test: ^7.0.0
  # For ease of serialization
  json_annotation: ^3.0.1
  # For ease of routing
  auto_route: ^0.6.7
  # For use with Firebase as backend
  # firebase_core: ^0.4.4+3
  # For authentication with Firebase
  # firebase_auth: ^0.16.0
  # For Signing in and registering with Google
  # google_sign_in: ^4.4.6
  # For ease of showing status bars
  flushbar: ^1.10.4
  # For dynamically resizing text
  auto_size_text: ^2.1.0
  # For showing the user's experience progression
  percent_indicator: ^2.1.5
  # Takes out some boilerplate
  flutter_hooks: ^0.13.0
  # For FloatingActionButton menus
  unicorndial: ^1.1.5
  # To add shadow to icons with less boiler plate
  icon_shadow: ^1.0.1
  # For getting images from the device
  image_picker: ^0.6.7+4
  # For getting multiple images from the device
  multi_image_picker: ^4.7.10
  cached_network_image: ^2.2.0+1
  uuid: ^2.2.0

dev_dependencies:
  flutter_test:
    sdk: flutter
  # For mocking dependencies during unit testing
  mockito: ^4.1.1
  # For unions generation
  freezed: ^0.11.5
  # Collection of lint rules
  lint: ^1.2.0
  # For dependency injection code generation
  injectable_generator: ^1.0.4
  # For Serializing entities to JSON
  json_serializable: ^3.3.0
  # For auto generating the routes
  auto_route_generator: ^0.6.8
  # For ease of setting the app icon
  flutter_launcher_icons: ^0.7.5
  # For extra icons
  font_awesome_flutter: ^8.8.1
  build_runner:

flutter_icons:
  image_path: "assets/world_on_logo.jpg"
  android: true
  ios: true

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  assets:
    - assets/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
